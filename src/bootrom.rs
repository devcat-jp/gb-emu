// ブート用ROM
// ROMデータは下記のものを使用
// https://github.com/take44444/Gameboy-free_bootrom
#![allow(dead_code)]

pub struct Bootrom {
    rom: Vec<u8>,           // u8の配列
    active: bool,           // ブートROMの有効無効
}

impl Bootrom {
    // データ作成
    pub fn new() -> Self {
      Self {
        rom: vec![
            0x31, 0xfe, 0xff, 0x21, 0x00, 0x80, 0x3e, 0x00, 
            0x22, 0xcb, 0x6c, 0x28, 0xf9, 0x3e, 0x80, 0xe0,       
            0x26, 0xe0, 0x11, 0x3e, 0xf3, 0xe0, 0x12, 0xe0,       
            0x25, 0x3e, 0x77, 0xe0, 0x24, 0x3e, 0xfc, 0xe0,       
            0x47, 0x11, 0xaa, 0x00, 0x21, 0x10, 0x80, 0x1a,       
            0x47, 0xcd, 0x7a, 0x00, 0xcd, 0x7a, 0x00, 0x13,       
            0x7b, 0xfe, 0x34, 0x20, 0xf2, 0x3e, 0x19, 0xea,       
            0x10, 0x99, 0x21, 0x2f, 0x99, 0x0e, 0x0c, 0x3d,       
            0x28, 0x08, 0x32, 0x0d, 0x20, 0xf9, 0x2e, 0x0f,       
            0x18, 0xf5, 0x3e, 0x64, 0xe0, 0x43, 0x57, 0x3e,       
            0x91, 0xe0, 0x40, 0xcd, 0x8f, 0x00, 0xcd, 0x8f,       
            0x00, 0x15, 0x7a, 0xe0, 0x43, 0x20, 0xf4, 0x3e,       
            0x83, 0xcd, 0xa3, 0x00, 0x06, 0xa0, 0xcd, 0x9c,       
            0x00, 0x21, 0xb0, 0x01, 0xe5, 0xf1, 0x21, 0x4d,       
            0x01, 0x01, 0x13, 0x00, 0x11, 0xd8, 0x00, 0xc3,       
            0xfe, 0x00, 0x3e, 0x04, 0x0e, 0x00, 0xcb, 0x10,       
            0xf5, 0xcb, 0x11, 0xf1, 0xcb, 0x11, 0x3d, 0x20,       
            0xf5, 0x79, 0x22, 0x23, 0x22, 0x23, 0xc9, 0xc5,       
            0x06, 0x0a, 0x0e, 0xff, 0x0d, 0x20, 0xfd, 0x05,       
            0x20, 0xf8, 0xc1, 0xc9, 0xcd, 0x8f, 0x00, 0x05, 
            0x20, 0xfa, 0xc9, 0xe0, 0x13, 0x3e, 0x87, 0xe0,       
            0x14, 0xc9, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,       
            0xff, 0xff, 0xff, 0x33, 0x00, 0x00, 0x33, 0x33,       
            0xff, 0xcc, 0xcc, 0x00, 0x33, 0x33, 0xff, 0xcc,       
            0xcc, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00,       
            0xff, 0xff, 0xff, 0x00, 0xcc, 0xcc, 0x33, 0x33,       
            0xff, 0xff, 0x00, 0xcc, 0x33, 0x33, 0xff, 0xff,       
            0x00, 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       
            0x00, 0x00, 0x21, 0x04, 0x01, 0x11, 0xa8, 0x00,       
            0x1a, 0x13, 0xbe, 0x20, 0x01, 0x23, 0x7d, 0xfe,       
            0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,       
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x50,
            ],
            active: true,
        }
    }

    // データ読み取り
    pub fn read(&self, addr: u16) -> u8 {
        self.rom[addr as usize]
    }

    // 有効・無効の取得
    pub fn is_active(&self) -> bool {
        self.active
    }

    // 書き込み、0以外の場合はブートROMを無効に
    pub fn write(&mut self, _: u16, val: u8) {
        if val != 0 { self.active = false; }
    }

}